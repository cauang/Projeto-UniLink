import React, { useState, useCallback } from 'react';
// Importação dos ícones do lucide-react
import { GraduationCap, MessageSquare, Users, BookOpen, ShieldCheck, Heart, UserPlus, Star, Medal, CheckSquare, BarChart3, TrendingUp, Sparkles, Loader2 } from 'lucide-react';

// Constantes de cor para manter a consistência do tema azul e verde
const PRIMARY_BLUE = '#1E40FF';
const LIGHT_GREEN = '#94FF8D';
// Cor de fundo leve para as caixas de procedimento
const PROCEDURE_BG_COLOR = '#F9FAFB';

// Variáveis globais para Firebase (serão utilizadas na próxima iteração se houver persistência)
const apiKey = ""; // Chave da API Gemini. Deixada vazia para ser fornecida pelo ambiente.

// Estrutura de resposta JSON esperada pelo LLM
const responseSchema = {
    type: "OBJECT",
    properties: {
        procedure: {
            type: "STRING",
            description: "Um dos seguintes tipos de procedimento: Mentoria entre Pares, Grupos de Estudo, Revisão de Conteúdo, Suporte Técnico."
        },
        title: {
            type: "STRING",
            description: "Um título conciso e apelativo para o pedido (máx. 10 palavras)."
        },
        description: {
            type: "STRING",
            description: "Uma descrição detalhada e estruturada da ajuda necessária (máx. 150 palavras)."
        }
    },
    required: ["procedure", "title", "description"]
};

// --- Função de Chamada à API Gemini ---
const geminiApiCall = async (userQuery) => {
    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-09-2025:generateContent?key=${apiKey}`;

    const systemPrompt = "Aja como um conselheiro académico e assistente de mentoria da Unifor. Analise a dificuldade do aluno e proponha: 1) O tipo de 'procedure' mais adequado e 2) Um 'title' e 'description' claros e estruturados para um voluntário. O 'procedure' deve ser estritamente um destes: 'Mentoria entre Pares', 'Grupos de Estudo', 'Revisão de Conteúdo', ou 'Suporte Técnico'. Responda em Português de Portugal.";
    
    const payload = {
        contents: [{ parts: [{ text: userQuery }] }],
        systemInstruction: {
            parts: [{ text: systemPrompt }]
        },
        generationConfig: {
            responseMimeType: "application/json",
            responseSchema: responseSchema
        }
    };

    let result = null;
    let attempts = 0;
    const maxRetries = 3;

    while (attempts < maxRetries) {
        try {
            const response = await fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            });

            if (!response.ok) {
                // Se for erro 429 (Rate Limit), espera antes de tentar novamente
                if (response.status === 429 && attempts < maxRetries - 1) {
                    await new Promise(resolve => setTimeout(resolve, Math.pow(2, attempts) * 1000));
                    attempts++;
                    continue; // Tenta novamente
                }
                throw new Error(`Erro de API: ${response.statusText}`);
            }

            const apiResult = await response.json();
            const textPart = apiResult.candidates?.[0]?.content?.parts?.[0]?.text;
            if (textPart) {
                result = JSON.parse(textPart);
                break; // Sucesso
            } else {
                 console.error("Resposta da API vazia ou inválida.");
                 break;
            }
        } catch (error) {
            console.error("Erro na chamada à API Gemini:", error);
            if (attempts < maxRetries - 1) {
                await new Promise(resolve => setTimeout(resolve, Math.pow(2, attempts) * 1000));
                attempts++;
            } else {
                throw new Error("Falha ao comunicar com a API após várias tentativas.");
            }
        }
    }
    return result;
};


// Componente Card de Recurso (reutilizável para Como Funciona)
const FeatureCard = ({ icon: Icon, title, description, color }) => (
    <div className={`p-6 rounded-2xl shadow-lg border border-slate-100 transition duration-300 hover:shadow-xl bg-white flex-1 min-w-[280px]`}>
        <div className={`p-3 rounded-full inline-block mb-4 shadow-sm`} style={{ backgroundColor: color === 'blue' ? '#EBF0FF' : '#E6FFE5' }}>
            <Icon size={24} style={{ color: color === 'blue' ? PRIMARY_BLUE : '#4CAF50' }} />
        </div>
        <h3 className="text-lg font-semibold text-slate-900 mb-1">{title}</h3>
        <p className="text-sm text-slate-600 leading-relaxed">{description}</p>
    </div>
);

// Componente App principal
const App = () => {
    // Estado para a funcionalidade LLM
    const [userNeed, setUserNeed] = useState('');
    const [refinedSuggestion, setRefinedSuggestion] = useState(null);
    const [isLoading, setIsLoading] = useState(false);

    // Dados simulados para as seções
    const comoFuncionaData = [
        { icon: CheckSquare, title: "1. Cadastro Simples", description: "Crie a sua conta em poucos passos e valide o seu vínculo académico.", color: 'blue' },
        { icon: BarChart3, title: "2. Encontre Demandas", description: "Visualize as necessidades de colaboração postadas por colegas e professores.", color: 'blue' },
        { icon: TrendingUp, title: "3. Colabore e Ganhe", description: "Participe em projetos, ganhe créditos de voluntariado e ajude a comunidade.", color: 'blue' },
    ];

    const procedimentosData = [
        { icon: MessageSquare, title: "Mentoria entre Pares", description: "Ajuda individualizada em matérias específicas.", color: 'blue' },
        { icon: Users, title: "Grupos de Estudo", description: "Criação de grupos para aprender em equipa.", color: 'blue' },
        { icon: BookOpen, title: "Revisão de Conteúdo", description: "Receba feedback em trabalhos e artigos.", color: 'blue' },
        { icon: ShieldCheck, title: "Suporte Técnico", description: "Auxílio com ferramentas e sistemas académicos.", color: 'blue' },
    ];

    const handleRefineRequest = useCallback(async () => {
        if (!userNeed.trim()) {
            setRefinedSuggestion({ error: "Por favor, descreva a sua necessidade antes de refinar." });
            return;
        }

        setIsLoading(true);
        setRefinedSuggestion(null);

        try {
            const query = `Minha dificuldade é: ${userNeed}. Qual o melhor tipo de procedimento e como devo estruturar meu pedido?`;
            const result = await geminiApiCall(query);
            
            if (result && !result.error) {
                setRefinedSuggestion(result);
            } else {
                setRefinedSuggestion({ error: "Não foi possível gerar uma sugestão. Tente novamente." });
            }
        } catch (error) {
            console.error("Erro ao refinar pedido:", error);
            setRefinedSuggestion({ error: "Ocorreu um erro de rede. Verifique a consola." });
        } finally {
            setIsLoading(false);
        }
    }, [userNeed]);


    return (
        <div className="min-h-screen font-sans bg-slate-50">
            {/* Seção Principal (Hero) */}
            <header className="py-20 md:py-32 text-white text-center rounded-b-3xl shadow-xl" style={{ backgroundColor: PRIMARY_BLUE }}>
                <div className="container mx-auto px-4 max-w-4xl">
                    <h1 className="text-4xl md:text-5xl font-extrabold mb-4 leading-tight">
                        Bem-vindo ao <span style={{ color: LIGHT_GREEN }}>Unilink</span>
                    </h1>
                    <p className="text-lg md:text-xl font-light opacity-90 mb-8">
                        Conectando talentos, fomentando o aprendizado colaborativo e impulsionando a excelência acadêmica na Unifor.
                    </p>
                    <a href="#funciona" className="inline-flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-full shadow-lg text-slate-900 bg-white hover:bg-slate-100 transition duration-300">
                        Saiba Mais
                    </a>
                </div>
            </header>

            <main className="container mx-auto px-4 py-16">
                
                {/* --- SEÇÃO: COMO FUNCIONA --- */}
                <section id="funciona" className="mb-20">
                    <h2 className="text-3xl font-bold text-center text-slate-800 mb-12">Como Funciona</h2>
                    <div className="flex flex-wrap justify-center gap-8">
                        {comoFuncionaData.map((data, index) => (
                            <FeatureCard key={index} {...data} />
                        ))}
                    </div>
                </section>

                {/* --- SEÇÃO: PROCEDIMENTOS DISPONÍVEIS --- */}
                <section className="mb-20">
                    <h2 className="text-3xl font-bold text-center text-slate-800 mb-12">Procedimentos Disponíveis</h2>
                    <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
                        {procedimentosData.map((data, index) => (
                            <div key={index} className="p-4 rounded-xl shadow-sm border border-slate-200" style={{ backgroundColor: PROCEDURE_BG_COLOR }}>
                                <div className='flex items-center space-x-3'>
                                    <div className={`p-2 rounded-full flex-shrink-0 border`} style={{ backgroundColor: 'white', borderColor: PRIMARY_BLUE }}>
                                        <data.icon size={20} style={{ color: PRIMARY_BLUE }} />
                                    </div>
                                    <div>
                                        <h3 className="text-base font-semibold text-slate-900 mb-0.5">{data.title}</h3>
                                        <p className="text-xs text-slate-600 leading-relaxed">{data.description}</p>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </section>

                {/* --- SEÇÃO: POR QUE USAR O UNILINK? --- */}
                <section className="mb-20">
                    <h2 className="text-3xl font-bold text-center text-slate-800 mb-12">Por que usar o Unilink?</h2>
                    <div className="flex flex-wrap justify-center gap-8">
                        
                        {/* Card 1: Para Voluntários (Verde) */}
                        <div className="flex-1 min-w-[300px] p-6 rounded-2xl shadow-xl border-4" style={{ borderColor: LIGHT_GREEN, backgroundColor: '#E6FFE5' }}>
                            <div className="flex items-center mb-4">
                                <div className="p-2 rounded-lg mr-3" style={{ backgroundColor: PRIMARY_BLUE }}>
                                    <Medal size={24} className="text-white" />
                                </div>
                                <h3 className="text-xl font-bold text-slate-900">Para Voluntários</h3>
                            </div>
                            <ul className="space-y-3 text-slate-700">
                                <li className="flex items-start text-sm">
                                    <span className="text-green-600 mr-2 mt-1">✓</span> Acumule horas de **Atividades Complementares** exigidas.
                                </li>
                                <li className="flex items-start text-sm">
                                    <span className="text-green-600 mr-2 mt-1">✓</span> Receba **Certificados** oficiais da Unifor pela sua colaboração.
                                </li>
                                <li className="flex items-start text-sm">
                                    <span className="text-green-600 mr-2 mt-1">✓</span> Aprimore as suas **habilidades técnicas e interpessoais** (soft skills).
                                </li>
                            </ul>
                        </div>

                        {/* Card 2: Para Alunos Solicitantes (Azul) */}
                        <div className="flex-1 min-w-[300px] p-6 rounded-2xl shadow-xl border-4" style={{ borderColor: PRIMARY_BLUE, backgroundColor: '#D9E0FF' }}>
                            <div className="flex items-center mb-4">
                                <div className="p-2 rounded-lg mr-3" style={{ backgroundColor: PRIMARY_BLUE }}>
                                    <GraduationCap size={24} className="text-white" />
                                </div>
                                <h3 className="text-xl font-bold text-slate-900">Para Alunos Solicitantes</h3>
                            </div>
                            <ul className="space-y-3 text-slate-700">
                                <li className="flex items-start text-sm">
                                    <span className="text-blue-600 mr-2 mt-1">✓</span> Receba **apoio académico gratuito** de colegas qualificados.
                                </li>
                                <li className="flex items-start text-sm">
                                    <span className="text-blue-600 mr-2 mt-1">✓</span> Melhore as suas notas e **desempenho** em disciplinas desafiadoras.
                                </li>
                                <li className="flex items-start text-sm">
                                    <span className="text-blue-600 mr-2 mt-1">✓</span> Conecte-se com a **rede de alunos** da sua área de estudo.
                                </li>
                            </ul>
                        </div>
                    </div>
                </section>

                {/* --- SEÇÃO: SEGURANÇA E QUALIDADE --- */}
                <section className="mb-20 text-center">
                    <h2 className="text-3xl font-bold text-center text-slate-800 mb-12">Segurança e Qualidade</h2>
                    <div className="flex flex-wrap justify-center gap-12">
                        <div className="flex flex-col items-center">
                            <div className="w-16 h-16 rounded-full flex items-center justify-center mb-2" style={{ backgroundColor: '#FFD70030' }}>
                                <Star size={32} className="text-yellow-500" />
                            </div>
                            <p className="text-sm font-semibold text-slate-700 mt-1">Feedback</p>
                        </div>
                        <div className="flex flex-col items-center">
                            <div className="w-16 h-16 rounded-full flex items-center justify-center mb-2" style={{ backgroundColor: '#00800030' }}>
                                <ShieldCheck size={32} className="text-green-500" />
                            </div>
                            <p className="text-sm font-semibold text-slate-700 mt-1">Verificação</p>
                        </div>
                        <div className="flex flex-col items-center">
                            <div className="w-16 h-16 rounded-full flex items-center justify-center mb-2" style={{ backgroundColor: '#1E40FF30' }}>
                                <Medal size={32} style={{ color: PRIMARY_BLUE }} />
                            </div>
                            <p className="text-sm font-semibold text-slate-700 mt-1">Certificação</p>
                        </div>
                    </div>
                </section>

                {/* --- NOVA SEÇÃO LLM: REFINADOR DE PEDIDOS --- */}
                <section className="mb-20 p-8 rounded-2xl shadow-2xl" style={{ backgroundColor: PRIMARY_BLUE }}>
                    <h2 className="text-3xl font-bold text-center text-white mb-6 flex items-center justify-center">
                        <Sparkles size={32} className="mr-2 text-yellow-300" />
                        Assistente de Pedidos Académicos (AI)
                    </h2>
                    <p className="text-lg text-white text-center opacity-80 mb-8">
                        Descreva a sua dificuldade. A nossa IA refina a sua solicitação para encontrar o voluntário perfeito!
                    </p>

                    <div className="max-w-xl mx-auto bg-white p-6 rounded-xl shadow-lg">
                        <label htmlFor="user-need" className="block text-sm font-medium text-slate-700 mb-2">
                            Em que disciplina ou área precisa de apoio?
                        </label>
                        <textarea
                            id="user-need"
                            rows="3"
                            value={userNeed}
                            onChange={(e) => setUserNeed(e.target.value)}
                            placeholder="Ex: Tenho dificuldade em Cálculo I, na parte de integrais de superfície..."
                            className="w-full p-3 border border-slate-300 rounded-lg focus:ring-blue-500 focus:border-blue-500 transition duration-150 text-sm resize-none"
                        />
                        <button
                            onClick={handleRefineRequest}
                            disabled={isLoading}
                            className={`w-full mt-4 flex items-center justify-center px-4 py-3 font-semibold rounded-full text-slate-900 shadow-md transition duration-300 ${
                                isLoading ? 'opacity-70 cursor-not-allowed' : 'hover:brightness-95'
                            }`}
                            style={{ backgroundColor: LIGHT_GREEN }}
                        >
                            {isLoading ? (
                                <>
                                    <Loader2 size={20} className="animate-spin mr-2" />
                                    A Refinar Pedido...
                                </>
                            ) : (
                                <>
                                    <Sparkles size={20} className="mr-2" />
                                    Gerar Pedido Refinado
                                </>
                            )}
                        </button>

                        {/* Área de Exibição da Sugestão Refinada */}
                        {refinedSuggestion && (
                            <div className="mt-6 p-4 border-l-4 rounded-r-lg" style={{ borderColor: PRIMARY_BLUE, backgroundColor: PROCEDURE_BG_COLOR }}>
                                {refinedSuggestion.error ? (
                                    <p className="text-red-600 font-medium">{refinedSuggestion.error}</p>
                                ) : (
                                    <>
                                        <h4 className="text-lg font-bold text-slate-800 mb-2">Sugestão de Pedido:</h4>
                                        <div className="space-y-2 text-sm text-slate-700">
                                            <p><span className="font-semibold text-gray-900">Procedimento Sugerido:</span> <span className='font-bold' style={{ color: PRIMARY_BLUE }}>{refinedSuggestion.procedure}</span></p>
                                            <p><span className="font-semibold text-gray-900">Título:</span> {refinedSuggestion.title}</p>
                                            <p><span className="font-semibold text-gray-900">Descrição para o Voluntário:</span> {refinedSuggestion.description}</p>
                                        </div>
                                        <p className="mt-3 text-xs text-slate-500 italic">Use esta estrutura para criar o seu pedido oficial na plataforma!</p>
                                    </>
                                )}
                            </div>
                        )}
                    </div>
                </section>
                {/* --- FIM DA NOVA SEÇÃO LLM --- */}


            </main>

            {/* Seção de Estatísticas (Faixa Azul) */}
            <div className="py-8 text-white text-center shadow-inner" style={{ backgroundColor: PRIMARY_BLUE }}>
                <div className="container mx-auto px-4 flex flex-wrap justify-around items-center">
                    <div className="text-2xl md:text-3xl font-bold mb-2 md:mb-0">500+ <p className="text-sm font-light opacity-80">Parcerias Feitas</p></div>
                    <div className="text-2xl md:text-3xl font-bold mb-2 md:mb-0">300+ <p className="text-sm font-light opacity-80">Horas Acumuladas</p></div>
                    <div className="text-2xl md:text-3xl font-bold mb-2 md:mb-0">150+ <p className="text-sm font-light opacity-80">Voluntários Ativos</p></div>
                    <div className="text-2xl md:text-3xl font-bold mb-2 md:mb-0">4.9⭐ <p className="text-sm font-light opacity-80">Avaliação Média</p></div>
                </div>
            </div>

            {/* --- SEÇÃO: PRONTO PARA PARTICIPAR? (CTAs) --- */}
            <section className="py-20 bg-slate-50">
                <h2 className="text-3xl font-bold text-center text-slate-800 mb-12">Pronto para Participar?</h2>
                <div className="container mx-auto px-4 flex flex-wrap justify-center gap-8">
                    
                    {/* CTA Card: Voluntário */}
                    <div className="flex-1 min-w-[300px] max-w-sm p-6 rounded-2xl shadow-xl border-2 transition duration-300 hover:shadow-2xl bg-white" style={{ borderColor: LIGHT_GREEN }}>
                        <h3 className="text-xl font-bold text-slate-900 mb-4 flex items-center">
                            <Heart size={24} className="text-red-500 mr-2" /> Quero me Voluntariar
                        </h3>
                        <p className="text-sm text-slate-600 mb-6">
                            Tem conhecimento para partilhar e quer acumular horas complementares?
                        </p>
                        <ul className="space-y-2 text-slate-700 mb-8">
                            <li className="flex items-center text-sm"><span className="text-green-600 mr-2">✓</span> Ganhe Certificados.</li>
                            <li className="flex items-center text-sm"><span className="text-green-600 mr-2">✓</span> Desenvolva Liderança.</li>
                            <li className="flex items-center text-sm"><span className="text-green-600 mr-2">✓</span> Faça Networking.</li>
                        </ul>
                        <button
                            type="button"
                            className="w-full px-4 py-3 font-semibold rounded-full text-slate-900 shadow-md transition duration-300 hover:brightness-95"
                            style={{ backgroundColor: LIGHT_GREEN }}
                            onClick={() => console.log("Simulando navegação para Cadastro de Voluntário...")}
                        >
                            Cadastre-se como Voluntário
                        </button>
                    </div>

                    {/* CTA Card: Solicitante */}
                    <div className="flex-1 min-w-[300px] max-w-sm p-6 rounded-2xl shadow-xl border-2 transition duration-300 hover:shadow-2xl bg-white" style={{ borderColor: PRIMARY_BLUE }}>
                        <h3 className="text-xl font-bold text-slate-900 mb-4 flex items-center">
                            <UserPlus size={24} style={{ color: PRIMARY_BLUE }} className="mr-2" /> Sou Aluno e quero Solicitar
                        </h3>
                        <p className="text-sm text-slate-600 mb-6">
                            Precisa de ajuda com alguma matéria ou projeto? Encontre o seu mentor ideal.
                        </p>
                        <ul className="space-y-2 text-slate-700 mb-8">
                            <li className="flex items-center text-sm"><span className="text-blue-600 mr-2">✓</span> Apoio Gratuito.</li>
                            <li className="flex items-center text-sm"><span className="text-blue-600 mr-2">✓</span> Aulas de Reforço.</li>
                            <li className="flex items-center text-sm"><span className="text-blue-600 mr-2">✓</span> Encontre Grupos.</li>
                        </ul>
                        <button
                            type="button"
                            className="w-full px-4 py-3 font-semibold rounded-full text-white shadow-md transition duration-300 hover:opacity-90"
                            style={{ backgroundColor: PRIMARY_BLUE }}
                            onClick={() => console.log("Simulando navegação para Solicitação de Ajuda...")}
                        >
                            Solicitar Apoio
                        </button>
                    </div>
                </div>
            </section>

            {/* Rodapé Simples */}
            <footer className="py-6 bg-white border-t border-slate-200">
                <div className="container mx-auto px-4 text-center text-xs text-slate-500">
                    <p>Unilink &copy; {new Date().getFullYear()} - Todos os direitos reservados. | <a href="#" className="hover:underline">Termos de Uso</a> | <a href="#" className="hover:underline">Política de Privacidade</a></p>
                </div>
            </footer>
        </div>
    );
};

// Exporta o componente App como default (padrão em projetos React)
export default App;
